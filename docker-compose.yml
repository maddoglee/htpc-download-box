services:
  nordlynx:
    container_name: nordlynx
    image: ghcr.io/bubuntux/nordlynx
    hostname: nordlynx
    restart: unless-stopped
    security_opt:
      - no-new-privileges:true
    ports:
      - "8080:8080" # QbitTorrent UI
      - "9696:9696" # Prowler UI
      - "8973:8973" # QbitTorrent
      - "8973:8973/udp" # QbitTorrent
    cap_add:
      - NET_ADMIN                             # required
      - SYS_MODULE                            # maybe
    environment:
      - PRIVATE_KEY=${NORDLYNX_KEY}               # required - defined in .env
#      - QUERY=filters\[servers_groups\]\[identifier\]=legacy_p2p
      - NET_LOCAL=192.168.1.0/24  # So it can be accessed within the local network
      - TZ=${TZ} # timezone, defined in .env
    sysctls:
#      - net.ipv4.conf.all.src_valid_mark=1   # maybe
#      - net.ipv4.conf.all.rp_filter=2        # maybe; set reverse path filter to loose mode
      - net.ipv6.conf.all.disable_ipv6=1     # disable ipv6; recommended if using ipv4 only
    healthcheck:
      test: curl -s https://api.ipify.org || exit 1
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 90s

  qbittorrent:
    image: linuxserver/qbittorrent:arm64v8-latest
    container_name: qbittorrent
    environment:
      - PUID=1000               # Optional
      - PGID=1000               # Optional
      - TZ=Australia/Sydney     # Optional
      - WEBUI_PORT=8080         # When accessing the webui, check the docker logs for the randomly generated password.
      #you also need a reverse proxy to access this if it is in the vpn! I'm using Caddy.
    restart: unless-stopped
    #network_mode: "service:nordvpn"
    network_mode: "service:nordlynx"
    depends_on:
#      - nordvpn
      - nordlynx
    volumes:
      - ./config/qbittorrent:/config
      - ${DOWNLOADS}/downloads:/downloads
      
# The torrent service would be available at http://localhost:8080/ 
# or anywhere inside of the local network http://192.168.1.xxx:8080
  prowlarr:
    image: linuxserver/prowlarr:latest
    container_name: prowlarr
    restart: unless-stopped
    environment:
      - PUID=${PUID} # default user id, defined in .env
      - PGID=${PGID} # default group id, defined in .env
      - TZ=${TZ} # timezone, defined in .env
    #network_mode: "service:nordvpn"
    network_mode: "service:nordlynx"
    depends_on:
#      - nordvpn
      - nordlynx
    volumes:
      - ./config/prowlarr:/config
      - /etc/localtime:/etc/localtime:ro
    #ports:
    #  - 9696:9696                # Web UI port

#   caddy:
#     image: caddy:latest
#     container_name: caddy
#     restart: unless-stopped
#     ports:
#       - "8080:8080"
#       - "9696:9696"
#       - "6789:6789"
#       - "80:80"
#       - "443:443"
#     volumes:
#       - ./config/caddy/Caddyfile:/etc/caddy/Caddyfile
#       - ./config/caddy/data:/data
#       - ./config/caddy/config:/config
#     networks:
#       - media_net
#     depends_on:
# #      - nordvpn
#       - nordlynx

  # jackett:
  #   container_name: jackett
  #   image: linuxserver/jackett:latest
  #   restart: unless-stopped
  #   network_mode: host
  #   environment:
  #     - PUID=${PUID} # default user id, defined in .env
  #     - PGID=${PGID} # default group id, defined in .env
  #     - TZ=${TZ} # timezone, defined in .env
  #   volumes:
  #     - /etc/localtime:/etc/localtime:ro
  #     - ${DOWNLOADS}/torrent-blackhole:/downloads # place where to put .torrent files for manual download
  #     - ./config/jackett:/config # config files

#   nzbget:
#     container_name: nzbget
#     image: linuxserver/nzbget:latest
#     restart: unless-stopped
#         #network_mode: "service:nordvpn"
#     network_mode: "service:nordlynx"
#     depends_on:
# #      - nordvpn
#       - nordlynx
#     environment:
#       - PUID=${PUID} # default user id, defined in .env
#       - PGID=${PGID} # default group id, defined in .env
#       - TZ=${TZ} # timezone, defined in .env
#     volumes:
#       - ${DOWNLOADS}/downloads:/downloads # download folder
#       - ./config/nzbget:/config # config files

  sonarr:
    container_name: sonarr
    image: linuxserver/sonarr:latest
    restart: unless-stopped
    network_mode: host
    environment:
      - PUID=${PUID} # default user id, defined in .env
      - PGID=${PGID} # default group id, defined in .env
      - TZ=${TZ} # timezone, defined in .env
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - ./config/sonarr:/config # config files
      - ${MEDIA}/:/videos # tv shows folder
      - ${DOWNLOADS}/downloads:/downloads # download folder

  radarr:
    container_name: radarr
    image: linuxserver/radarr:latest
    restart: unless-stopped
    network_mode: host
    environment:
      - PUID=${PUID} # default user id, defined in .env
      - PGID=${PGID} # default group id, defined in .env
      - TZ=${TZ} # timezone, defined in .env
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - ./config/radarr:/config # config files
      - ${MEDIA}/:/videos # movies folder
      - ${DOWNLOADS}/downloads:/downloads # download folder
  lidarr:
    container_name: lidarr
    image: lscr.io/linuxserver/lidarr:latest
    restart: unless-stopped
    network_mode: host
    environment:
      - PUID=${PUID} # default user id, defined in .env
      - PGID=${PGID} # default group id, defined in .env
      - TZ=${TZ} # timezone, defined in .env
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - ./config/lidarr/config:/config
      - ${MUSIC}/:/music
      - ${DOWNLOADS}/downloads:/downloads # download folder
    # ports:
    #   - 8686:8686   
  bazarr:
    container_name: bazarr
    image: linuxserver/bazarr:latest
    restart: unless-stopped
    network_mode: host
    environment:
      - PUID=${PUID} # default user id, defined in .env
      - PGID=${PGID} # default group id, defined in .env
      - TZ=${TZ} # timezone, defined in .env
      - UMASK_SET=022 #optional
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - ./config/bazarr:/config # config files
      - ${MEDIA}/:/videos # all media folder
      - ${DOWNLOADS}/downloads:/downloads # download folder
#      - ${MEDIA}/Movies:/movies # movies folder
#      - ${MEDIA}/TV_Shows:/tv # tv shows folder
    # ports:
    #   - 6767:6767
  jellyseerr:
    container_name: jellyseerr
    image: fallenbagel/jellyseerr:latest
    restart: unless-stopped
    network_mode: host
    environment:
      - LOG_LEVEL=debug
      - PUID=${PUID} # default user id, defined in .env
      - PGID=${PGID} # default group id, defined in .env
      - TZ=${TZ} # timezone, defined in .env
      - PORT=5055 #optional
    # ports:
    #   - 5055:5055
    volumes:
      - ./config/jellyseer:/app/config
#    healthcheck:
#      test: wget --no-verbose --tries=1 --spider http://localhost:5055/api/v1/status || exit 1
#      start_period: 20s
#      timeout: 3s
#      interval: 15s
#      retries: 3
  flaresolverr:
    container_name: flaresolverr
    # DockerHub mirror flaresolverr/flaresolverr:latest
    image: ghcr.io/flaresolverr/flaresolverr:latest
    restart: unless-stopped
    network_mode: host
    environment:
      - LOG_LEVEL=${LOG_LEVEL:-info}
      - LOG_HTML=${LOG_HTML:-false}
      - CAPTCHA_SOLVER=${CAPTCHA_SOLVER:-none}
      - PUID=${PUID} # default user id, defined in .env
      - PGID=${PGID} # default group id, defined in .env
      - TZ=${TZ} # timezone, defined in .env
    # ports:
    #   - "${PORT:-8191}:8191"

  portainer:
    container_name: portainer
    image: portainer/portainer-ce:latest
    restart: unless-stopped
    network_mode: host
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./config/portainer:/data
    # ports:
    #   - "9000:9000"

# Use host for Sonarr, Radarr, Bazarr, NZBGet — they benefit from LAN access.
# Use media_net for Caddy, Prowlarr, qBittorrent — they need internal DNS and reverse proxying.